{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\n\nexport interface CapacitorPluginAdPiePlugin {\n \n  call_AdPie_bannerAd(options: { AdPieSDK_MediaId: string, slotID: string }): Promise<void>;\n \n  call_AdPie_nativeAd(options: { AdPieSDK_MediaId: string, slotID: string }): Promise<void>;\n  call_AdPie_interstitialAd(options: { AdPieSDK_MediaId: string, slotID: string }): Promise<void>;\n  call_AdPie_rewardedAd(options: { AdPieSDK_MediaId: string, slotID: string }): Promise<void>;\n\n\n\n  //App\n  initialize(options: { appId: string }): Promise<void>;\n \n\n  // Banner\n  showBanner(options: { adBannerId: string ,position: string, margin: number }): Promise<void>; // position : TOP_CENTER, CENTER, default: BOTTOM_CENTER ; margin only for BOTTOM_CENTER or TOP_CENTER, default value =0.  \n  hideBanner(): Promise<void>;\n  removeBanner(): Promise<void>;\n  resumeBanner(): Promise<void>;\n\n\n  addListener(eventName: \"bannerAdLoaded\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"bannerAdFailedToLoad\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"bannerAdClicked\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n\n\n  // Reward\n  prepareRewardVideoAd(options: { adRewardId: string }): Promise<void>;\n  showRewardVideoAd(): Promise<void>;\n  isLoadedRewardVideoAd(): Promise<{ isLoadedRewardVideoAd: boolean }>;\n\n  addListener(eventName: \"onRewardedVideoLoaded\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onRewardedVideoFailedToLoad\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onRewardedVideoClicked\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onRewardedVideoStarted\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onRewardedVideoFinished\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n\n  // Interstitial\n  prepareInterstitial(options: { adInterstitialId: string }): Promise<void>;\n  showInterstitial(): Promise<void>;\n  isLoadedInterstitial(): Promise<{ isLoadedInterstitial: boolean }>;\n\n\n  addListener(eventName: \"onInterstitialLoaded\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onInterstitialFailedToLoad\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onInterstitialClicked\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onInterstitialShown\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  addListener(eventName: \"onInterstitialDismissed\", listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n}\n"]}